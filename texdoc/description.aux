\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}An Example Program}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {3}General Design Guidelines for the Concurrent Programming Course}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Shared Variable Mechanisms}{2}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/busyWaiting/twoProcessTieBreaker/TwoProcessTieBreakerRunnable1.java}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Main code of Tie Breaker process 1 in Java\relax }}{3}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:tieBreakerProcess1}{{1}{3}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/busyWaiting/twoProcessTieBreaker/TwoProcessTieBreakerRunnable2.java}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Main code of Tie Breaker process 2 in Java\relax }}{4}}
\newlabel{fig:tieBreakerProcess2}{{2}{4}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/busyWaiting/twoProcessTieBreaker/GlobalProgramState.java}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Main code of GlobalProgramState in TieBreaker for two processes\relax }}{5}}
\newlabel{fig:tieBreakerGPS}{{3}{5}}
\citation{andrews_foundations_2002}
\citation{andrews_foundations_2000}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Semaphores}{6}}
\newlabel{sec:semaphores}{{4.1}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Monitors}{6}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/semaphores/multipleProducerConsumerSingleBuffer/GlobalProgramState.java}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces GlobalProgramState of Producer/Consumer with a single buffer\relax }}{7}}
\newlabel{fig:pcsbgps}{{4}{7}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/semaphores/multipleProducerConsumerSingleBuffer/Producer.java}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Producer example definition of Producer/Consumer with a single buffer\relax }}{8}}
\newlabel{fig:pcsbproc}{{5}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Mechanisms based on Message Passing}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Asynchronous Message Passing}{8}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/semaphores/multipleProducerConsumerSingleBuffer/Consumer.java}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Consumer example definition of Producer/Consumer with a single buffer\relax }}{9}}
\newlabel{fig:pcsbcons}{{6}{9}}
\citation{andrews_foundations_2000}
\citation{andrews_foundations_2000}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Synchronous Message Passing}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Rendezvous}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Application Programming Interfaces}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}AndrewsProcess class}{10}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces AndrewsProcess API subset\relax }}{10}}
\newlabel{tab:andrewsProcessAPI}{{1}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Chan class}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {7}How To Guide}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Define a Process}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2}Start a Process}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3}Keep Track of Data Concerning a Process}{11}}
\bibstyle{apalike}
\bibdata{references}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4}Synchronize Processes}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.5}Communicate between Processes}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.6}Initialize a Program}{12}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/monitors/multipleProducerConsumerSingleBuffer/NBufferMonitor.java}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces SingleBufferMonitor of Producer/Consumer with a single buffer, based on monitors\relax }}{13}}
\newlabel{fig:pcsbsbm-monitor}{{7}{13}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/monitors/multipleProducerConsumerSingleBuffer/GlobalProgramState.java}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces GlobalProgramState of Producer/Consumer with a single buffer, based on monitors\relax }}{14}}
\newlabel{fig:pcsbgps-monitor}{{8}{14}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/monitors/multipleProducerConsumerSingleBuffer/Producer.java}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Producer of Producer/Consumer with a single buffer, based on monitors\relax }}{14}}
\newlabel{fig:pcsbproc-monitor}{{9}{14}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/monitors/multipleProducerConsumerSingleBuffer/Consumer.java}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Consumer of Producer/Consumer with a single buffer, based on monitors\relax }}{15}}
\newlabel{fig:pcsbproc-monitor}{{10}{15}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/messagePassing/simpleClientServer/ClientSimulation.java}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces ClientSimulation of simple Client/Server, based on asynchronous message passing\relax }}{16}}
\newlabel{fig:scs-clientSimulation}{{11}{16}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/messagePassing/simpleClientServer/Server.java}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Server of simple Client/Server, based on asynchronous message passing\relax }}{17}}
\newlabel{fig:scs-server}{{12}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Simple Client/Server ClientRequest type hierarchy\relax }}{18}}
\newlabel{fig:scs-cri}{{13}{18}}
\@writefile{lol}{\contentsline {lstlisting}{c:/git/IT325G/IT325G/examples/se/his/iit/it325g/examples/messagePassing/simpleClientServer/ClientRequest.java}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces ClientRequest (abstract class) of simple Client/Server, based on asynchronous message passing\relax }}{18}}
\newlabel{fig:scs-clientRequest}{{14}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Chan class hierarchy\relax }}{18}}
\newlabel{fig:chanHierarchy}{{15}{18}}
